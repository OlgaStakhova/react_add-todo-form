{"version":3,"sources":["App.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","index.tsx"],"names":["FormElementEnum","UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","TodoList","todosList","map","todoItem","username","users","usersFromServer","todos","userId","find","App","useState","todosNow","setTodosNow","titleValue","setTitleValue","userValue","setUserValue","isValidSelect","setIsValidUserSelect","isValidInput","setIsValidInput","useEffect","handlerFormElement","e","target","value","TITLE","USER","action","method","onSubmit","preventDefault","maxIdtodos","Math","max","userCange","newTodo","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24ae907e.chunk.js","sourcesContent":["import { FormEvent, useEffect, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User, TodoUser } from './react-app-env';\n\nenum FormElementEnum {\n  USER = 'user',\n  TITLE = 'title',\n}\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst users: User[] = usersFromServer.map(user => ({ ...user }));\nconst todos: TodoUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todosNow, setTodosNow] = useState(todos);\n  const [titleValue, setTitleValue] = useState('');\n  const [userValue, setUserValue] = useState('0');\n  const [isValidSelect, setIsValidUserSelect] = useState(true);\n  const [isValidInput, setIsValidInput] = useState(true);\n\n  const resetForm = () => {\n    setTitleValue('');\n    setUserValue('0');\n  };\n\n  const resetValidation = () => {\n    if (titleValue) {\n      setIsValidInput(true);\n    }\n\n    if (userValue !== '0') {\n      setIsValidUserSelect(true);\n    }\n  };\n\n  useEffect(() => {\n    resetValidation();\n  }, [titleValue, userValue]);\n\n  const handlerSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const maxIdtodos = Math.max(...todosNow.map(todo => todo.id));\n    const userCange = users.find(user => user.name === userValue);\n\n    const newTodo: TodoUser = {\n      id: maxIdtodos + 1,\n      title: titleValue,\n      completed: false,\n      userId: (userCange && userCange.id) || 0,\n      user: (userCange && userCange) || null,\n    };\n\n    if (titleValue) {\n      setIsValidInput(true);\n    } else {\n      setIsValidInput(false);\n    }\n\n    if (userValue !== '0') {\n      setIsValidUserSelect(true);\n    } else {\n      setIsValidUserSelect(false);\n    }\n\n    if (userCange && newTodo.title) {\n      setTodosNow(() => ([...todosNow, newTodo as TodoUser]));\n      resetForm();\n    }\n  };\n\n  const handlerFormElement = (\n    e: FormEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { value, name } = (e.target as HTMLInputElement | HTMLSelectElement);\n\n    switch (name) {\n      case FormElementEnum.TITLE:\n        setTitleValue(value);\n        break;\n      case FormElementEnum.USER:\n        setUserValue(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handlerSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titleValue}\n            name={FormElementEnum.TITLE}\n            onChange={handlerFormElement}\n          />\n          {\n            !isValidInput && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userValue}\n            name={FormElementEnum.USER}\n            onChange={handlerFormElement}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {\n            !isValidSelect\n            && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todosList={todosNow} />\n      </section>\n    </div>\n  );\n};\n","import { User } from '../../react-app-env';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <>\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  </>\n);\n","import { TodoUser } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: TodoUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${(todo.completed) ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title }</h2>\n      <UserInfo user={todo.user} />\n    </article>\n  </>\n);\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { TodoUser } from '../../react-app-env';\n\ntype Props = {\n  todosList: TodoUser[];\n};\n\nexport const TodoList:FC<Props> = ({ todosList }) => (\n  <>\n    <section className=\"TodoList\">\n      {todosList.map(todoItem => (\n        <TodoInfo todo={todoItem} key={todoItem.id} />\n      ))}\n    </section>\n  </>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}